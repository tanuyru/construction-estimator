/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/Product": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Product"][];
            "application/json": components["schemas"]["Product"][];
            "text/json": components["schemas"]["Product"][];
          };
        };
      };
    };
    put: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Product"];
          "text/json": components["schemas"]["Product"];
          "application/*+json": components["schemas"]["Product"];
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["Product"];
          "text/json": components["schemas"]["Product"];
          "application/*+json": components["schemas"]["Product"];
        };
      };
    };
  };
  "/api/Product/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Product"];
            "application/json": components["schemas"]["Product"];
            "text/json": components["schemas"]["Product"];
          };
        };
      };
    };
  };
  "/api/ProjectEstimate/apply": {
    put: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ProjectConfiguration"];
          "text/json": components["schemas"]["ProjectConfiguration"];
          "application/*+json": components["schemas"]["ProjectConfiguration"];
        };
      };
    };
  };
  "/api/ProjectEstimate": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ProjectEstimate"][];
            "application/json": components["schemas"]["ProjectEstimate"][];
            "text/json": components["schemas"]["ProjectEstimate"][];
          };
        };
      };
    };
    put: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ProjectEstimate"];
          "text/json": components["schemas"]["ProjectEstimate"];
          "application/*+json": components["schemas"]["ProjectEstimate"];
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ProjectEstimate"];
          "text/json": components["schemas"]["ProjectEstimate"];
          "application/*+json": components["schemas"]["ProjectEstimate"];
        };
      };
    };
  };
  "/api/ProjectEstimate/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ProjectEstimate"];
            "application/json": components["schemas"]["ProjectEstimate"];
            "text/json": components["schemas"]["ProjectEstimate"];
          };
        };
      };
    };
  };
  "/api/RentalEquipment": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["RentalEquipment"][];
            "application/json": components["schemas"]["RentalEquipment"][];
            "text/json": components["schemas"]["RentalEquipment"][];
          };
        };
      };
    };
    put: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["RentalEquipment"];
          "text/json": components["schemas"]["RentalEquipment"];
          "application/*+json": components["schemas"]["RentalEquipment"];
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["RentalEquipment"];
          "text/json": components["schemas"]["RentalEquipment"];
          "application/*+json": components["schemas"]["RentalEquipment"];
        };
      };
    };
  };
  "/api/RentalEquipment/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["RentalEquipment"];
            "application/json": components["schemas"]["RentalEquipment"];
            "text/json": components["schemas"]["RentalEquipment"];
          };
        };
      };
    };
  };
}

export interface components {
  schemas: {
    Product: {
      /** Format: double */
      costPerSqFt?: number;
      /** Format: double */
      costForSize?: number;
      costPerSqFtPerType?: { [key: string]: number } | null;
      costPerType?: { [key: string]: number } | null;
      /** Format: int32 */
      id?: number;
      costType?: string | null;
      name?: string | null;
      costItems?: components["schemas"]["ProjectCostItem"][] | null;
    };
    ProjectArea: {
      /** Format: double */
      costPerSqFt?: number;
      /** Format: double */
      costForSize?: number;
      costPerSqFtPerType?: { [key: string]: number } | null;
      costPerType?: { [key: string]: number } | null;
      costType?: string | null;
      /** Format: double */
      sizeSqFt?: number;
      name?: string | null;
      appliedProducts?: components["schemas"]["Product"][] | null;
    };
    ProjectConfiguration: {
      /** Format: int32 */
      projectId?: number;
      calcKey?: string | null;
      name?: string | null;
      /** Format: double */
      defaultPricePerUnit?: number;
      /** Format: double */
      hourUnitPrice?: number;
      /** Format: double */
      indirectCostFactor?: number;
      pricePerUnitPerCostItem?: { [key: string]: number } | null;
    };
    ProjectCostItem: {
      /** Format: double */
      costPerSqFt?: number;
      /** Format: double */
      costForSize?: number;
      costPerSqFtPerType?: { [key: string]: number } | null;
      costPerType?: { [key: string]: number } | null;
      /** Format: double */
      parentArea?: number;
      costType?: string | null;
      costTypeOther?: string | null;
      /** Format: double */
      unitsPerSqFt?: number;
      unitType?: string | null;
      /** Format: double */
      pricePerUnit?: number;
      accountingCode?: string | null;
      itemName?: string | null;
      itemDescription?: string | null;
      productName?: string | null;
      planName?: string | null;
      areaCode?: string | null;
      scope?: string | null;
      folderLevel?: string | null;
    };
    ProjectEstimate: {
      /** Format: double */
      costPerSqFt?: number;
      /** Format: double */
      costForSize?: number;
      costPerSqFtPerType?: { [key: string]: number } | null;
      costPerType?: { [key: string]: number } | null;
      /** Format: int32 */
      id?: number;
      costType?: string | null;
      projectName?: string | null;
      scopes?: components["schemas"]["ProjectScope"][] | null;
      /** Format: double */
      contractValue?: number;
      /** Format: double */
      grossToNetFactor?: number;
      /** Format: double */
      grossCostWithProfit?: number | null;
      /** Format: double */
      contractCost?: number | null;
      branch?: string | null;
      division?: string | null;
      taxableTaxExempt?: boolean;
      /** Format: double */
      taxRate?: number;
      shopDrawingsRequired?: boolean;
      submittalsRequired?: boolean;
      /** Format: int32 */
      quotedNumberOfMobilizations?: number;
      /** Format: double */
      priceForAddedMobilizations?: number;
      /** Format: double */
      costPerMob?: number;
      /** Format: double */
      distanceToProjectMiles?: number;
      certifiedProject?: boolean;
      prevailingWage?: boolean;
      /** Format: double */
      prevailingWageRate?: number;
      /** Format: int32 */
      totalHRSSelected?: number;
      /** Format: int32 */
      totalCrewDaysOfSelected?: number;
      /** Format: double */
      fuelCostEstimated?: number;
    };
    ProjectScope: {
      /** Format: double */
      costPerSqFt?: number;
      /** Format: double */
      costForSize?: number;
      costPerSqFtPerType?: { [key: string]: number } | null;
      costPerType?: { [key: string]: number } | null;
      /** Format: int32 */
      id?: number;
      costType?: string | null;
      /** Format: double */
      totalSize?: number;
      /** Format: double */
      proposedAmount?: number;
      /** Format: double */
      costWithGrossProfit?: number;
      areas?: components["schemas"]["ProjectArea"][] | null;
      /** Format: double */
      totalArea?: number;
      scopeName?: string | null;
      rentals?: components["schemas"]["RentalEquipment"][] | null;
      /** Format: double */
      indirectCostFactor?: number;
      /** Format: double */
      grossProfitPercent?: number;
      costPerArea?: { [key: string]: number } | null;
    };
    RentalEquipment: {
      /** Format: double */
      costPerSqFt?: number;
      /** Format: double */
      costForSize?: number;
      costPerSqFtPerType?: { [key: string]: number } | null;
      costPerType?: { [key: string]: number } | null;
      /** Format: int32 */
      id?: number;
      costType?: string | null;
      name?: string | null;
      /** Format: double */
      pricePerDay?: number;
      /** Format: double */
      parentArea?: number;
      /** Format: int32 */
      numDays?: number;
    };
  };
}

export interface operations {}

export interface external {}
